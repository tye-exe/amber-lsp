/// This builtin reads one line at a time from a text file.
/// It can be used in place of an array in an iterative for loop (with or without an index).
/// This is efficient because each line is read into memory, and processed before the next line is read:
///
/// ```amber
/// for line in lines("foo.txt") {
///     echo line
/// }
///
/// for index, line in lines("bar.txt") {
///     echo "\#{index} {line}"
/// }
/// ```
///
/// Alternatively, it can be used as the right hand side of an array assignment.
/// This is inefficient because the entire file is read into memory in one go:
///
/// ```amber
/// let lines = lines("foo.txt")
/// lines += lines("bar.txt")
/// echo len(lines)
/// ```
pub fun lines(path: Text): [Text] {}

/// For a `Text` value, this builtin calculates and returns the length (in ASCII characters) as a Num type.
/// It is transpiled to `${#TEXT}`:
/// ```amber
/// // Returns 37
/// echo len("Jackdaws love my big sphinx of quartz")
/// ```
/// For an `Array` `[]` value, it calculates and returns the length of the array as a Num type.
/// It is transpiled to `${#ARRAY[@]}`:
///
/// ```amber
/// // Returns 5
/// echo len(["one", "two", "three", "four", "five"])
/// ```
pub fun len(value): Num {}