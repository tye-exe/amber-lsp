/// Check if directory exists
pub fun dir_exist(path) {
    $[ -d "{path}" ]$ failed {
        return false
    }
    return true
}

/// Check if file exists
pub fun file_exist(path) {
    $[ -f "{path}" ]$ failed {
        return false
    }
    return true
}

/// Get the file content
pub fun file_read(path) {
    return $< "{path}"$?
}

/// Write the content to the file
/// Doesn't check if the file exist
pub fun file_write(path, content) {
    return $echo "{content}" > "{path}"$?
}

/// Append the content to the file
/// Doesn't check if the file exist
pub fun file_append(path, content) {
    return $echo "{content}" >> "{path}"$?
}

/// Create a symbolic link
/// If the file doens't exist return a boolean and print a message
pub fun create_symbolic_link(origin: Text, destination: Text): Bool {
    if file_exist(origin) {
        unsafe $ln -s "{origin}" "{destination}"$
        return true
    }

    echo "The file {origin} doesn't exist!"
    return false
}

/// Create a directory with all intermediate directories as required
pub fun create_dir(path: Text): Null {
    if not dir_exist(path) {
        unsafe $mkdir -p "{path}"$
    }
}

/// Set the file as executable
/// If the file doesn't exist return a boolean and print a message
pub fun make_executable(path: Text): Bool {
    if file_exist(path) {
        unsafe $chmod +x "{path}"$
        return true
    }

    echo "The file {path} doesn't exist!"
    return false
}

/// Change the owner of the file
/// If the file doesn't exist return false
pub fun change_owner(user: Text, path: Text): Bool {
    if file_exist(path) or dir_exist(path) {
        unsafe $chown -R "{user}" "{path}"$
        return true
    }

    return false
}
